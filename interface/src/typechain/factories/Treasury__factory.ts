/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Treasury, TreasuryInterface } from "../Treasury";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610591806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806347e7ef2414610046578063adb5198014610076578063f3fef3a3146100a6575b600080fd5b610060600480360381019061005b9190610361565b6100d6565b60405161006d9190610454565b60405180910390f35b610090600480360381019061008b9190610325565b6101d7565b60405161009d9190610476565b60405180910390f35b6100c060048036038101906100bb9190610361565b6101fc565b6040516100cd9190610454565b60405180910390f35b6060816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006040518060400160405280600681526020017f706c65617365000000000000000000000000000000000000000000000000000081525090507f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f623385856040516101c5939291906103f4565b60405180910390a18091505092915050565b6000602052816000526040600020602052806000526040600020600091509150505481565b6060816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006040518060400160405280600681526020017f706c65617365000000000000000000000000000000000000000000000000000081525090507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436484846040516102e992919061042b565b60405180910390a18091505092915050565b60008135905061030a8161052d565b92915050565b60008135905061031f81610544565b92915050565b6000806040838503121561033857600080fd5b6000610346858286016102fb565b9250506020610357858286016102fb565b9150509250929050565b6000806040838503121561037457600080fd5b6000610382858286016102fb565b925050602061039385828601610310565b9150509250929050565b6103a6816104ad565b82525050565b60006103b782610491565b6103c1818561049c565b93506103d18185602086016104e9565b6103da8161051c565b840191505092915050565b6103ee816104df565b82525050565b6000606082019050610409600083018661039d565b610416602083018561039d565b61042360408301846103e5565b949350505050565b6000604082019050610440600083018561039d565b61044d60208301846103e5565b9392505050565b6000602082019050818103600083015261046e81846103ac565b905092915050565b600060208201905061048b60008301846103e5565b92915050565b600081519050919050565b600082825260208201905092915050565b60006104b8826104bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105075780820151818401526020810190506104ec565b83811115610516576000848401525b50505050565b6000601f19601f8301169050919050565b610536816104ad565b811461054157600080fd5b50565b61054d816104df565b811461055857600080fd5b5056fea2646970667358221220ff85e74d1ae9b0b6fcbe333cd4c6e894c59e4232799c232f7262755f02433afc64736f6c63430008040033";

export class Treasury__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Treasury> {
    return super.deploy(overrides || {}) as Promise<Treasury>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
